[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trustchain"
version = "0.1.0"
description = "Cryptographically signed AI tool responses for preventing hallucinations"
readme = "README.md"
authors = [
    {name = "TrustChain Contributors", email = "info@trustchain.dev"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["ai", "security", "cryptography", "signatures", "blockchain", "trust"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Security :: Cryptography",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "PyNaCl>=1.5.0",
    "cryptography>=41.0.0",
    "pydantic>=2.0.0",
    "msgpack>=1.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
kafka = [
    "kafka-python>=2.0.0",
    "aiokafka>=0.10.0",
    "confluent-kafka>=2.3.0",
]
redis = [
    "redis>=5.0.0",
    "aioredis>=2.0.0",
]
blockchain = [
    "web3>=6.0.0",
    "ipfshttpclient>=0.8.0",
]
monitoring = [
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
]
ai = [
    "langchain>=0.1.0",
    "openai>=1.0.0",
    "anthropic>=0.8.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
trustchain = "trustchain.cli:main"

[project.urls]
Homepage = "https://github.com/trustchain/trustchain"
Documentation = "https://trustchain.readthedocs.io/"
Repository = "https://github.com/trustchain/trustchain.git"
"Bug Tracker" = "https://github.com/trustchain/trustchain/issues"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["trustchain"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["trustchain"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["F401", "F811"] 